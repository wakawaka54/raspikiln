{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/kiln-api/kiln-api.service\";\nimport * as i2 from \"ngx-echarts\";\nimport * as i3 from \"@angular/common\";\nexport class DashboardComponent {\n  constructor(kilnApi) {\n    this.data = [];\n    this.temperature = kilnApi.historicalTemperature(new Date(0));\n    this.temperature.subscribe(data => {\n      this.data = data.map(entry => {\n        return {\n          name: new Date(entry.timestamp).toISOString(),\n          value: [entry.value]\n        };\n      });\n    });\n    this.options = {\n      title: {\n        text: 'Temperature'\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          animation: false\n        }\n      },\n      xAxis: {\n        type: 'time'\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Temperature',\n        type: 'line',\n        showSymbol: false,\n        data: this.data\n      }]\n    };\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.KilnApiService));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 7,\n  vars: 6,\n  consts: [[\"echarts\", \"\", 3, \"options\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Hello I am a dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, i0.ɵɵpipeBind1(5, 4, ctx.temperature)), \"\\n\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"options\", ctx.options);\n    }\n  },\n  directives: [i2.NgxEchartsDirective],\n  pipes: [i3.JsonPipe, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/belloale/pspace/RaspiKiln/raspikiln-dashboard/webapp/src/app/dashboard/dashboard.component.ts"],"names":["i0","i1","i2","i3","DashboardComponent","constructor","kilnApi","data","temperature","historicalTemperature","Date","subscribe","map","entry","name","timestamp","toISOString","value","options","title","text","tooltip","trigger","axisPointer","animation","xAxis","type","yAxis","series","showSymbol","ɵfac","DashboardComponent_Factory","t","ɵɵdirectiveInject","KilnApiService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpipe","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","directives","NgxEchartsDirective","pipes","JsonPipe","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/kiln-api/kiln-api.service\";\nimport * as i2 from \"ngx-echarts\";\nimport * as i3 from \"@angular/common\";\nexport class DashboardComponent {\n    constructor(kilnApi) {\n        this.data = [];\n        this.temperature = kilnApi.historicalTemperature(new Date(0));\n        this.temperature.subscribe(data => {\n            this.data = data.map(entry => {\n                return {\n                    name: new Date(entry.timestamp).toISOString(),\n                    value: [entry.value]\n                };\n            });\n        });\n        this.options = {\n            title: {\n                text: 'Temperature'\n            },\n            tooltip: {\n                trigger: \"axis\",\n                axisPointer: {\n                    animation: false\n                }\n            },\n            xAxis: {\n                type: 'time'\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'Temperature',\n                    type: 'line',\n                    showSymbol: false,\n                    data: this.data\n                }\n            ]\n        };\n    }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.KilnApiService)); };\nDashboardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [[\"ng-component\"]], decls: 7, vars: 6, consts: [[\"echarts\", \"\", 3, \"options\"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Hello I am a dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"json\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, i0.ɵɵpipeBind1(5, 4, ctx.temperature)), \"\\n\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"options\", ctx.options);\n    } }, directives: [i2.NgxEchartsDirective], pipes: [i3.JsonPipe, i3.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}
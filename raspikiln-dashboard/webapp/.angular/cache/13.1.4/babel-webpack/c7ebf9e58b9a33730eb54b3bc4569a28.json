{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/kiln-api/kiln-api.service\";\nimport * as i2 from \"ngx-echarts\";\nimport * as i3 from \"@angular/common\";\nexport class DashboardComponent {\n  constructor(kilnApi) {\n    this.data = [];\n    this.temperature = kilnApi.historicalTemperature(new Date(0));\n    let now = new Date(2005, 1, 1);\n    let current = Math.random() + 1000;\n    const oneDay = 24 * 60 * 60 * 1000;\n\n    for (let i = 0; i != 1000; i++) {\n      now = new Date(+now + oneDay);\n      current = current + Math.random() * 21 - 10;\n      this.data.push({\n        name: now.toString(),\n        value: [[now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'), current]\n      });\n    }\n\n    this.options = {\n      title: {\n        text: 'Temperature'\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          animation: false\n        }\n      },\n      xAxis: {\n        type: 'time'\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: 'Temperature',\n        type: 'line',\n        showSymbol: false,\n        data: this.data\n      }]\n    };\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.KilnApiService));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 7,\n  vars: 6,\n  consts: [[\"echarts\", \"\", 3, \"options\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Hello I am a dashboard\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"json\");\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, i0.ɵɵpipeBind1(5, 4, ctx.temperature)), \"\\n\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"options\", ctx.options);\n    }\n  },\n  directives: [i2.NgxEchartsDirective],\n  pipes: [i3.JsonPipe, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/belloale/pspace/RaspiKiln/raspikiln-dashboard/webapp/src/app/dashboard/dashboard.component.ts"],"names":["i0","i1","i2","i3","DashboardComponent","constructor","kilnApi","data","temperature","historicalTemperature","Date","now","current","Math","random","oneDay","i","push","name","toString","value","getFullYear","getMonth","getDate","join","options","title","text","tooltip","trigger","axisPointer","animation","xAxis","type","yAxis","series","showSymbol","ɵfac","DashboardComponent_Factory","t","ɵɵdirectiveInject","KilnApiService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpipe","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ɵɵproperty","directives","NgxEchartsDirective","pipes","JsonPipe","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/kiln-api/kiln-api.service\";\nimport * as i2 from \"ngx-echarts\";\nimport * as i3 from \"@angular/common\";\nexport class DashboardComponent {\n    constructor(kilnApi) {\n        this.data = [];\n        this.temperature = kilnApi.historicalTemperature(new Date(0));\n        let now = new Date(2005, 1, 1);\n        let current = Math.random() + 1000;\n        const oneDay = 24 * 60 * 60 * 1000;\n        for (let i = 0; i != 1000; i++) {\n            now = new Date(+now + oneDay);\n            current = current + Math.random() * 21 - 10;\n            this.data.push({\n                name: now.toString(),\n                value: [[now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'), current]\n            });\n        }\n        this.options = {\n            title: {\n                text: 'Temperature'\n            },\n            tooltip: {\n                trigger: \"axis\",\n                axisPointer: {\n                    animation: false\n                }\n            },\n            xAxis: {\n                type: 'time'\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'Temperature',\n                    type: 'line',\n                    showSymbol: false,\n                    data: this.data\n                }\n            ]\n        };\n    }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.KilnApiService)); };\nDashboardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [[\"ng-component\"]], decls: 7, vars: 6, consts: [[\"echarts\", \"\", 3, \"options\"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Hello I am a dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"json\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 0);\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 2, i0.ɵɵpipeBind1(5, 4, ctx.temperature)), \"\\n\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"options\", ctx.options);\n    } }, directives: [i2.NgxEchartsDirective], pipes: [i3.JsonPipe, i3.AsyncPipe], encapsulation: 2 });\n"]},"metadata":{},"sourceType":"module"}
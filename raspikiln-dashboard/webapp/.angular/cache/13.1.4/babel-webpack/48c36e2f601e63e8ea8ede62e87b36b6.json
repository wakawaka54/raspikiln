{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Select } from \"@ngxs/store\";\nimport { KilnStore } from \"../../../kiln/kiln.store\";\nimport { map } from \"rxjs\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"../../../kiln/components/metrics-chart/metrics-chart.component\";\nimport * as i3 from \"../../../kiln/components/control-form/control-form.component\";\nimport * as i4 from \"@angular/common\";\n\nconst _c0 = function () {\n  return [];\n};\n\nlet DashboardTabsComponent = class DashboardTabsComponent {\n  constructor() {\n    this.dashboardMetricOptions = {\n      legend: {\n        data: ['Temperature', 'Target']\n      },\n      yAxis: {\n        formatter: '{value} °C'\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.dashboardMetrics = this.dashboardConfig.pipe(untilDestroyed(this), map(config => this.createMetrics(config)));\n  }\n\n  createMetrics(config) {\n    const temperatures = config.temperatureMetricNames.map(metric => ({\n      name: metric.name,\n      metricName: metric.metricName,\n      lineStyle: {\n        color: '#E64A19',\n        type: 'solid',\n        width: 2,\n        opacity: 1\n      }\n    }));\n    const targets = config.targetMetricNames.map(metric => ({\n      name: metric.name,\n      metricName: metric.metricName,\n      lineStyle: {\n        color: '#FFAB91',\n        type: 'solid',\n        width: 2,\n        opacity: 0.5\n      }\n    }));\n    return [...temperatures, ...targets];\n  }\n\n};\n\nDashboardTabsComponent.ɵfac = function DashboardTabsComponent_Factory(t) {\n  return new (t || DashboardTabsComponent)();\n};\n\nDashboardTabsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardTabsComponent,\n  selectors: [[\"app-dashboard-tabs\"]],\n  decls: 8,\n  vars: 8,\n  consts: [[\"label\", \"Temperature\"], [3, \"chartOptions\", \"metrics\"], [\"label\", \"Control\"], [1, \"a-control-form-tab\"], [3, \"kilnStatus\"]],\n  template: function DashboardTabsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-group\");\n      i0.ɵɵelementStart(1, \"mat-tab\", 0);\n      i0.ɵɵelement(2, \"app-metrics-chart\", 1);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-tab\", 2);\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"app-kiln-control-form\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      let tmp_1_0;\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"chartOptions\", ctx.dashboardMetricOptions)(\"metrics\", (tmp_1_0 = i0.ɵɵpipeBind1(3, 3, ctx.dashboardMetrics)) !== null && tmp_1_0 !== undefined ? tmp_1_0 : i0.ɵɵpureFunction0(7, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"kilnStatus\", i0.ɵɵpipeBind1(7, 5, ctx.kilnStatus));\n    }\n  },\n  directives: [i1.MatTabGroup, i1.MatTab, i2.MetricsChartComponent, i3.ControlFormComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\".a-control-form-tab[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC10YWJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUFGIiwiZmlsZSI6ImRhc2hib2FyZC10YWJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYS1jb250cm9sLWZvcm0tdGFiIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbiJdfQ== */\"]\n});\n\n__decorate([Select(KilnStore.dashboardConfig)], DashboardTabsComponent.prototype, \"dashboardConfig\", void 0);\n\n__decorate([Select(KilnStore.currentKilnStatus)], DashboardTabsComponent.prototype, \"kilnStatus\", void 0);\n\nDashboardTabsComponent = __decorate([UntilDestroy()], DashboardTabsComponent);\nexport { DashboardTabsComponent };","map":{"version":3,"sources":["/Users/belloale/pspace/RaspiKiln/raspikiln-dashboard/webapp/src/app/dashboard/components/tabs/dashboard-tabs.component.ts"],"names":["__decorate","Select","KilnStore","map","UntilDestroy","untilDestroyed","i0","i1","i2","i3","i4","_c0","DashboardTabsComponent","constructor","dashboardMetricOptions","legend","data","yAxis","formatter","ngOnInit","dashboardMetrics","dashboardConfig","pipe","config","createMetrics","temperatures","temperatureMetricNames","metric","name","metricName","lineStyle","color","type","width","opacity","targets","targetMetricNames","ɵfac","DashboardTabsComponent_Factory","t","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","DashboardTabsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵpipe","ɵɵelementEnd","tmp_1_0","ɵɵadvance","ɵɵproperty","ɵɵpipeBind1","undefined","ɵɵpureFunction0","kilnStatus","directives","MatTabGroup","MatTab","MetricsChartComponent","ControlFormComponent","pipes","AsyncPipe","styles","prototype","currentKilnStatus"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,uBAA7C;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gEAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8DAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;;AACA,MAAMC,GAAG,GAAG,YAAY;AAAE,SAAO,EAAP;AAAY,CAAtC;;AACA,IAAIC,sBAAsB,GAAG,MAAMA,sBAAN,CAA6B;AACtDC,EAAAA,WAAW,GAAG;AACV,SAAKC,sBAAL,GAA8B;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAE,CAAC,aAAD,EAAgB,QAAhB;AADF,OADkB;AAI1BC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE;AADR;AAJmB,KAA9B;AAQH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,gBAAL,GAAwB,KAAKC,eAAL,CACnBC,IADmB,CACdjB,cAAc,CAAC,IAAD,CADA,EACQF,GAAG,CAACoB,MAAM,IAAI,KAAKC,aAAL,CAAmBD,MAAnB,CAAX,CADX,CAAxB;AAEH;;AACDC,EAAAA,aAAa,CAACD,MAAD,EAAS;AAClB,UAAME,YAAY,GAAGF,MAAM,CAACG,sBAAP,CAA8BvB,GAA9B,CAAkCwB,MAAM,KAAK;AAC9DC,MAAAA,IAAI,EAAED,MAAM,CAACC,IADiD;AAE9DC,MAAAA,UAAU,EAAEF,MAAM,CAACE,UAF2C;AAG9DC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,SADA;AAEPC,QAAAA,IAAI,EAAE,OAFC;AAGPC,QAAAA,KAAK,EAAE,CAHA;AAIPC,QAAAA,OAAO,EAAE;AAJF;AAHmD,KAAL,CAAxC,CAArB;AAUA,UAAMC,OAAO,GAAGZ,MAAM,CAACa,iBAAP,CAAyBjC,GAAzB,CAA6BwB,MAAM,KAAK;AACpDC,MAAAA,IAAI,EAAED,MAAM,CAACC,IADuC;AAEpDC,MAAAA,UAAU,EAAEF,MAAM,CAACE,UAFiC;AAGpDC,MAAAA,SAAS,EAAE;AACPC,QAAAA,KAAK,EAAE,SADA;AAEPC,QAAAA,IAAI,EAAE,OAFC;AAGPC,QAAAA,KAAK,EAAE,CAHA;AAIPC,QAAAA,OAAO,EAAE;AAJF;AAHyC,KAAL,CAAnC,CAAhB;AAUA,WAAO,CAAC,GAAGT,YAAJ,EAAkB,GAAGU,OAArB,CAAP;AACH;;AArCqD,CAA1D;;AAuCAvB,sBAAsB,CAACyB,IAAvB,GAA8B,SAASC,8BAAT,CAAwCC,CAAxC,EAA2C;AAAE,SAAO,KAAKA,CAAC,IAAI3B,sBAAV,GAAP;AAA6C,CAAxH;;AACAA,sBAAsB,CAAC4B,IAAvB,GAA8B,aAAclC,EAAE,CAACmC,iBAAH,CAAqB;AAAET,EAAAA,IAAI,EAAEpB,sBAAR;AAAgC8B,EAAAA,SAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAA3C;AAAqEC,EAAAA,KAAK,EAAE,CAA5E;AAA+EC,EAAAA,IAAI,EAAE,CAArF;AAAwFC,EAAAA,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,aAAV,CAAD,EAA2B,CAAC,CAAD,EAAI,cAAJ,EAAoB,SAApB,CAA3B,EAA2D,CAAC,OAAD,EAAU,SAAV,CAA3D,EAAiF,CAAC,CAAD,EAAI,oBAAJ,CAAjF,EAA4G,CAAC,CAAD,EAAI,YAAJ,CAA5G,CAAhG;AAAgOC,EAAAA,QAAQ,EAAE,SAASC,+BAAT,CAAyCC,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACnW1C,MAAAA,EAAE,CAAC4C,cAAH,CAAkB,CAAlB,EAAqB,eAArB;AACA5C,MAAAA,EAAE,CAAC4C,cAAH,CAAkB,CAAlB,EAAqB,SAArB,EAAgC,CAAhC;AACA5C,MAAAA,EAAE,CAAC6C,SAAH,CAAa,CAAb,EAAgB,mBAAhB,EAAqC,CAArC;AACA7C,MAAAA,EAAE,CAAC8C,MAAH,CAAU,CAAV,EAAa,OAAb;AACA9C,MAAAA,EAAE,CAAC+C,YAAH;AACA/C,MAAAA,EAAE,CAAC4C,cAAH,CAAkB,CAAlB,EAAqB,SAArB,EAAgC,CAAhC;AACA5C,MAAAA,EAAE,CAAC4C,cAAH,CAAkB,CAAlB,EAAqB,KAArB,EAA4B,CAA5B;AACA5C,MAAAA,EAAE,CAAC6C,SAAH,CAAa,CAAb,EAAgB,uBAAhB,EAAyC,CAAzC;AACA7C,MAAAA,EAAE,CAAC8C,MAAH,CAAU,CAAV,EAAa,OAAb;AACA9C,MAAAA,EAAE,CAAC+C,YAAH;AACA/C,MAAAA,EAAE,CAAC+C,YAAH;AACA/C,MAAAA,EAAE,CAAC+C,YAAH;AACH;;AAAC,QAAIL,EAAE,GAAG,CAAT,EAAY;AACV,UAAIM,OAAJ;AACAhD,MAAAA,EAAE,CAACiD,SAAH,CAAa,CAAb;AACAjD,MAAAA,EAAE,CAACkD,UAAH,CAAc,cAAd,EAA8BP,GAAG,CAACnC,sBAAlC,EAA0D,SAA1D,EAAqE,CAACwC,OAAO,GAAGhD,EAAE,CAACmD,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqBR,GAAG,CAAC7B,gBAAzB,CAAX,MAA2D,IAA3D,IAAmEkC,OAAO,KAAKI,SAA/E,GAA2FJ,OAA3F,GAAqGhD,EAAE,CAACqD,eAAH,CAAmB,CAAnB,EAAsBhD,GAAtB,CAA1K;AACAL,MAAAA,EAAE,CAACiD,SAAH,CAAa,CAAb;AACAjD,MAAAA,EAAE,CAACkD,UAAH,CAAc,YAAd,EAA4BlD,EAAE,CAACmD,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqBR,GAAG,CAACW,UAAzB,CAA5B;AACH;AAAE,GAnB0D;AAmBxDC,EAAAA,UAAU,EAAE,CAACtD,EAAE,CAACuD,WAAJ,EAAiBvD,EAAE,CAACwD,MAApB,EAA4BvD,EAAE,CAACwD,qBAA/B,EAAsDvD,EAAE,CAACwD,oBAAzD,CAnB4C;AAmBoCC,EAAAA,KAAK,EAAE,CAACxD,EAAE,CAACyD,SAAJ,CAnB3C;AAmB2DC,EAAAA,MAAM,EAAE,CAAC,6dAAD;AAnBnE,CAArB,CAA5C;;AAoBApE,UAAU,CAAC,CACPC,MAAM,CAACC,SAAS,CAACmB,eAAX,CADC,CAAD,EAEPT,sBAAsB,CAACyD,SAFhB,EAE2B,iBAF3B,EAE8C,KAAK,CAFnD,CAAV;;AAGArE,UAAU,CAAC,CACPC,MAAM,CAACC,SAAS,CAACoE,iBAAX,CADC,CAAD,EAEP1D,sBAAsB,CAACyD,SAFhB,EAE2B,YAF3B,EAEyC,KAAK,CAF9C,CAAV;;AAGAzD,sBAAsB,GAAGZ,UAAU,CAAC,CAChCI,YAAY,EADoB,CAAD,EAEhCQ,sBAFgC,CAAnC;AAGA,SAASA,sBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Select } from \"@ngxs/store\";\nimport { KilnStore } from \"../../../kiln/kiln.store\";\nimport { map } from \"rxjs\";\nimport { UntilDestroy, untilDestroyed } from \"@ngneat/until-destroy\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"../../../kiln/components/metrics-chart/metrics-chart.component\";\nimport * as i3 from \"../../../kiln/components/control-form/control-form.component\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = function () { return []; };\nlet DashboardTabsComponent = class DashboardTabsComponent {\n    constructor() {\n        this.dashboardMetricOptions = {\n            legend: {\n                data: ['Temperature', 'Target']\n            },\n            yAxis: {\n                formatter: '{value} °C'\n            }\n        };\n    }\n    ngOnInit() {\n        this.dashboardMetrics = this.dashboardConfig\n            .pipe(untilDestroyed(this), map(config => this.createMetrics(config)));\n    }\n    createMetrics(config) {\n        const temperatures = config.temperatureMetricNames.map(metric => ({\n            name: metric.name,\n            metricName: metric.metricName,\n            lineStyle: {\n                color: '#E64A19',\n                type: 'solid',\n                width: 2,\n                opacity: 1\n            }\n        }));\n        const targets = config.targetMetricNames.map(metric => ({\n            name: metric.name,\n            metricName: metric.metricName,\n            lineStyle: {\n                color: '#FFAB91',\n                type: 'solid',\n                width: 2,\n                opacity: 0.5,\n            }\n        }));\n        return [...temperatures, ...targets];\n    }\n};\nDashboardTabsComponent.ɵfac = function DashboardTabsComponent_Factory(t) { return new (t || DashboardTabsComponent)(); };\nDashboardTabsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardTabsComponent, selectors: [[\"app-dashboard-tabs\"]], decls: 8, vars: 8, consts: [[\"label\", \"Temperature\"], [3, \"chartOptions\", \"metrics\"], [\"label\", \"Control\"], [1, \"a-control-form-tab\"], [3, \"kilnStatus\"]], template: function DashboardTabsComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tab-group\");\n        i0.ɵɵelementStart(1, \"mat-tab\", 0);\n        i0.ɵɵelement(2, \"app-metrics-chart\", 1);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-tab\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"app-kiln-control-form\", 4);\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"chartOptions\", ctx.dashboardMetricOptions)(\"metrics\", (tmp_1_0 = i0.ɵɵpipeBind1(3, 3, ctx.dashboardMetrics)) !== null && tmp_1_0 !== undefined ? tmp_1_0 : i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"kilnStatus\", i0.ɵɵpipeBind1(7, 5, ctx.kilnStatus));\n    } }, directives: [i1.MatTabGroup, i1.MatTab, i2.MetricsChartComponent, i3.ControlFormComponent], pipes: [i4.AsyncPipe], styles: [\".a-control-form-tab[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC10YWJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUFGIiwiZmlsZSI6ImRhc2hib2FyZC10YWJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYS1jb250cm9sLWZvcm0tdGFiIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbiJdfQ== */\"] });\n__decorate([\n    Select(KilnStore.dashboardConfig)\n], DashboardTabsComponent.prototype, \"dashboardConfig\", void 0);\n__decorate([\n    Select(KilnStore.currentKilnStatus)\n], DashboardTabsComponent.prototype, \"kilnStatus\", void 0);\nDashboardTabsComponent = __decorate([\n    UntilDestroy()\n], DashboardTabsComponent);\nexport { DashboardTabsComponent };\n"]},"metadata":{},"sourceType":"module"}